(dp1
S'output'
p2
S"<type 'exceptions.RuntimeError'> you must specify a Field(...,uploadfolder=...)"
p3
sS'layer'
p4
S'/home/pratyusha/web2py/applications/yorock/controllers/default.py'
p5
sS'code'
p6
S'def index():\n    product = db(db.product).select(orderby=db.product.name)\n    return locals()\n\ndef form():\n    return dict\n\ndef search():\n    id = request.vars\n    lock=db((db.product.name==\'id\') | (db.product.category==\'id\') | (db.product.sub==\'id\') | (db.product.mini==\'id\')).select(orderby=product.name)\n    return locals()\ndef contact():\n    return dict()\n   \ndef call():\n    session.forget()\n    return service()\n# an action to see and process a shopping cart\n@auth.requires_login()\ndef cart():\n    if not session.cart:\n        session.flash = \'Add something to shopping cart\'\n        redirect(URL(\'index\'))\n    return dict(cart=session.cart)\n@auth.requires_login()\ndef cart_callback():\n    id = int(request.vars.id)\n    if request.vars.action == \'add\':\n        session.cart[id]=session.cart.get(id,0)+1\n    if request.vars.action == \'sub\':\n        session.cart[id]=max(0,session.cart.get(id,0)-1)\n    return str(session.cart[id])\n\n@auth.requires_login()\ndef buy():\n    if not session.cart:\n        session.flash = \'Add something to shopping cart\'\n        redirect(URL(\'index\'))\n    import uuid\n    from gluon.contrib.AuthorizeNet import process\n    total = sum(db.product(id).price*qty for id,qty in session.cart.items())\n    form = SQLFORM.factory(\n                Field(\'creditcard\',requires=IS_NOT_EMPTY()),\n                Field(\'expiration\',default=\'12/2012\',requires=IS_MATCH(\'\\d{2}/\\d{4}\')),\n                Field(\'cvv\',requires=IS_MATCH(\'\\d{3}\')))\n    if form.accepts(request,session):\n        if process(form.vars.creditcard,form.vars.expiration,\n                    total,form.vars.cvv,0.0,invoice,testmode=True):\n            for key, value in session.cart.items():\n                db.sale.insert( buyer=auth.user.id,\n                                product = key,\n                                quantity = value,\n                                price = db.product(key).price,\n                                creditcard = form.vars.creditcard)\n            session.cart.clear()\n            session.flash = \'Thank you for your order\'\n        else:\n            response.flash = "payment rejected (please call XXX)"\n    return dict(cart=session.cart,form=form,total=total)\n\n@auth.requires_membership(\'admin\')                               \ndef sale():\n    import uuid\n    from gluon.contrib.AuthorizeNet import process\n    form = SQLFORM.factory(\n                    Field(\'name\',\'string\',requires=IS_NOT_EMPTY(),unique=True),\n                    Field(\'price\',\'integer\',requires=IS_NOT_EMPTY()),\n                    Field(\'description\',\'text\'),\n                    Field(\'image\',\'upload\'),\n                    Field(\'category\',\'string\'),\n                    Field(\'sub\',\'string\'),\n                    Field(\'mini\',\'string\'))\n    if form.accepts(request,session):\n        if process(form.vars.name,form.vars.price,form.vars.description,form.vars.image,form.vars.category,form.vars.sub,form.vars.mini,testmode=True):\n            db.product.insert(name=form.vars.name,\n                              price=form.vars.price,\n                              description=form.vars.description,\n                              category=form.vars.category,\n                              sub=form.vars.sub,\n                              mini=form.vars.mini)\n            session.cart.clear()\n    return dict(cart=session.cart,form=form)\n    \ndef biography():\n    biography = db((db.product.category==\'books\') & (db.product.sub==\'biography\')).select(orderby=db.product.name)\n    return locals()    \ndef ac():\n    ac = db((db.product.category==\'homeneeds\') & (db.product.sub==\'ac\')).select(orderby=db.product.name)\n    return locals()\ndef fiction():\n    fiction = db((db.product.category==\'books\') & (db.product.sub==\'fiction\')).select(orderby=db.product.name)\n    return locals()\ndef history():\n    phones = db((db.product.category==\'books\') & (db.product.sub==\'history\')).select(orderby=db.product.name)\n    return locals()\ndef ipads():\n    ipads = db((db.product.category==\'electrical appliances\') & (db.product.sub==\'ipads\')).select(orderby=db.product.name)\n    return locals()\ndef kidaccess():\n    kidaccess = db((db.product.category==\'kids\') & (db.product.sub==\'kidaccess\')).select(orderby=db.product.name)\n    return locals()\ndef kidcloth():\n    kidcloth = db((db.product.category==\'kids\') & (db.product.sub==\'kidcloth\')).select(orderby=db.product.name)\n    return locals()\ndef philosophy():\n    philosophy = db((db.product.category==\'books\') & (db.product.sub==\'philosophy\')).select(orderby=db.product.name)\n    return locals()\ndef kidfoot():\n    kidfoot = db((db.product.category==\'kids\') & (db.product.sub==\'kidfoot\')).select(orderby=db.product.name)\n    return locals()\ndef laptops():\n    laptops = db((db.product.category==\'electrical appliances\') & (db.product.sub==\'laptops\')).select(orderby=db.product.name)\n    return locals()\ndef maccessories():\n    maccessories = db((db.product.category==\'men\') & (db.product.sub==\'maccessories\')).select(orderby=db.product.name)\n    return locals()\ndef mclothing():\n    mclothing = db((db.product.category==\'men\') & (db.product.sub==\'mclothing\')).select(orderby=db.product.name)\n    return locals()\ndef mfootwear():\n    mfootwear = db((db.product.category==\'men\') & (db.product.sub==\'mfootwear\')).select(orderby=db.product.name)\n    return locals()\n\ndef phones():\n    phones = db((db.product.category==\'electrical appliances\') & (db.product.sub==\'phones\')).select(orderby=db.product.name)\n    return locals()\ndef sciefi():\n    sciefi = db((db.product.category==\'books\') & (db.product.sub==\'sciefi\')).select(orderby=db.product.name)\n    return locals()\ndef tablets():\n    tablets = db((db.product.category==\'electrical appliances\') & (db.product.sub==\'tablets\')).select(orderby=db.product.name)\n    return locals()\ndef waccess():\n    waccess = db((db.product.category==\'women\') & (db.product.sub==\'waccess\')).select(orderby=db.product.name)\n    return locals()\ndef wcloth():\n    wcloth = db((db.product.category==\'women\') & (db.product.sub==\'wcloth\')).select(orderby=db.product.name)\n    return locals()\ndef wfoot():\n    wfoot = db((db.product.category==\'women\') & (db.product.sub==\'wfoot\')).select(orderby=db.product.name)\n    return locals()\ndef furniture():\n    furniture = db((db.product.category==\'homeneeds\') & (db.product.sub==\'furniture\')).select(orderby=db.product.name)\n    return locals()\ndef tv():\n    tv = db((db.product.category==\'homeneeds\') & (db.product.sub==\'tv\')).select(orderby=db.product.name)\n    return locals()\ndef refrigerators():\n    refrigerators = db((db.product.category==\'homeneeds\') & (db.product.sub==\'refrigerators\')).select(orderby=db.product.name)\n    return locals()\n\ndef user():\n    return dict(form=auth())\n@cache.action()\ndef download():\n    return response.download(request, db)\n\nresponse._vars=response._caller(sale)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/pratyusha/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/pratyusha/web2py/applications/yorock/controllers/default.py", line 158, in <module>\n  File "/home/pratyusha/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/pratyusha/web2py/gluon/tools.py", line 3440, in f\n    return action(*a, **b)\n  File "/home/pratyusha/web2py/applications/yorock/controllers/default.py", line 73, in sale\n    if form.accepts(request,session):\n  File "/home/pratyusha/web2py/gluon/sqlhtml.py", line 1595, in accepts\n    field.uploadfolder)\n  File "/home/pratyusha/web2py/gluon/packages/dal/pydal/objects.py", line 1560, in store\n    "you must specify a Field(...,uploadfolder=...)")\nRuntimeError: you must specify a Field(...,uploadfolder=...)\n'
p11
s.